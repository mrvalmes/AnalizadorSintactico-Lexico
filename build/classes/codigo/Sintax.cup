package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    private java.util.HashMap<String, String> symbolTable = new java.util.HashMap<>();

    // Método para registrar una variable en la tabla de símbolos
    public void declareVariable(String varName, String varType) throws Exception {
        if (symbolTable.containsKey(varName)) {
            throw new Exception("Error: La variable '" + varName + "' ya fue declarada.");
        }
        symbolTable.put(varName, varType);
    }

    // Método para verificar que una variable esté declarada y sea del tipo esperado
    public void checkVariable(String varName, String expectedType) throws Exception {
        if (!symbolTable.containsKey(varName)) {
            throw new Exception("Error: La variable '" + varName + "' no ha sido declarada.");
        }
        String actualType = symbolTable.get(varName);
        if (!actualType.equals(expectedType)) {
            throw new Exception("Error de tipo: se esperaba '" + expectedType + "', pero se encontró '" + actualType + "'.");
        }
    }

    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }
:};

terminal Int, If, Else, While, Igual, Suma, Resta, Multiplicacion, 
    Division, Parentesis_a, Parentesis_c, Llave_a, Llave_c, Main, P_coma, Identificador, Numero, ERROR;
non terminal INICIO, SENTENCIA, DECLARACION;

start with INICIO;

INICIO ::= Int Main Parentesis_a Parentesis_c Llave_a SENTENCIA Llave_c
;

SENTENCIA ::= 
      Int Identificador P_coma 
      {: 
          // Declaración de variable sin inicializar
          try {
             parser.declareVariable(((Symbol)$2).value.toString(), "int");
            } catch (Exception e) {
             System.out.println(e.getMessage()+ "Mensaje 1");
        }
      :}
    | Int Identificador Igual Numero P_coma
      {: 
          // Declaración de variable con inicialización
          try {
             parser.declareVariable(((Symbol)$2).value.toString(), "int");
            } catch (Exception e) {
             System.out.println(e.getMessage()+ "Mensaje 2");
        }
      :}
    | Identificador Igual Numero P_coma
      {: 
          // Asignación: verificar que la variable esté declarada y sea del tipo esperado
          try {
             parser.checkVariable(((Symbol)$1).value.toString(), "int");
            } catch (Exception e) {
             System.out.println(e.getMessage()+ "Mensaje 3");
        }
      :}
;

